[milter]
# The socket used to communicate with sendmail
socketname = /var/run/milter/spfmiltersock
# Process umask for runmilter.  Set to e.g. 0117 to allow group write.
;umask = 0177
# Name of the milter given to sendmail
name = pyspffilter
# Trusted relays such as secondary MXes that should not have SPF checked.
;trusted_relay =
# Internal networks that should not have SPF checked.
internal_connect = 127.0.0.1,192.168.0.0/16,10.0.0.0/8

# Use this default policy to "guess" a heuristic result for SPF None.
# The official result is still report in Received-SPF, but the heuristic
# result is used to determine policy.
;best_guess = v=spf1 a mx ptr ?all

# namespace where SPF records can be supplied for domains without one
# records are searched for under _spf.domain.com, and if found become
# the heuristic result.
;delegate = domain.com

# TEMPFAIL, REJECT, CONTINUE
untrapped_exception = CONTINUE

# See http://www.openspf.com for more info on SPF.
[spf]
# Use sendmail or postfix access map or similar format for detailed spf policy.
# SPF entries in the access map will override defaults.
access_file = /etc/mail/access.db
# Set to true if the access file keys have nulls appended.  This is a 
# configuration option for the map on sendmail and postfix.  On RHEL,
# postfix postmap defaults to nulls (postmap -N) and sendmail makemap defaults
# to no nulls.
;access_file_nulls = false
# Connections that get an SPF pass for a pretend MAIL FROM of 
# postmaster@sometrustedforwarder.com skip SPF checks for the real MAIL FROM.
# This is for non-SRS forwarders.  It is a simple implementation that
# is inefficient for more than a few entries.
;trusted_forwarder = careerbuilder.com
